services:
  httpbin:
    image: kennethreitz/httpbin
    network_mode: host
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost/ip"]
      interval: 10s
      timeout: 5s
      retries: 10

  postgres:
    image: postgres:16
    network_mode: host
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: qa
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 10

  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    network_mode: host
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "Your_password123"
    # Rely on port 1433 availability for readiness

  hydreq:
    build:
      context: .
      dockerfile: Dockerfile.playwright
    network_mode: host
    working_dir: /work
    environment:
      ENABLE_DEMO_AUTH: "1"
    env_file:
      - .env
    volumes:
      - .:/work
    depends_on:
      - httpbin
      - postgres
      - mssql

  playwright:
    image: mcr.microsoft.com/playwright:v1.50.0-noble
    user: "root"
    network_mode: host
    environment:
      CI: "true"
      HYDREQ_E2E_URL: "http://localhost:8787/"
      HTTPBIN_BASE_URL: "http://localhost:80"
      PG_DSN: "postgres://postgres:password@localhost:5432/qa?sslmode=disable"
      MSSQL_DSN: "sqlserver://sa:Your_password123@localhost:1433?database=master"
    volumes:
      - ./:/work
    working_dir: /work/test/e2e
    depends_on:
      - hydreq
      - httpbin
      - postgres
      - mssql
    entrypoint: /bin/bash
    command: 
      - -c
      - |
        printf '\033[1;32mStarting Playwright\033[0m\n'
        cd /work/test/e2e
        printf '\033[1;33mIn dir: %s\033[0m\n' "$(pwd)"
        npm install > /dev/null 2>&1
        printf '\033[1;32mnpm install done\033[0m\n'
        npx playwright install --with-deps > /dev/null 2>&1
        printf '\033[1;32minstall deps done\033[0m\n'
        npx playwright test --reporter=list --reporter=html
